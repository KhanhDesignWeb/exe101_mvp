// ================= Q&A Topic Detail ================
let classes = JSON.parse(localStorage.getItem("classes") || "[]"); // l·∫•y th√¥ng tin l·ªõp h·ªçc t·ª´ localStorage
const googleUser = JSON.parse(localStorage.getItem("user") || "{}"); // l·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage
const params = new URLSearchParams(window.location.search);
const classId = params.get("class_id");
const topicId = params.get("topic_id");
let lastAIReply = "";

const cls = classes.find((c) => c.class_id === classId);
if (!cls) {
  document.body.innerHTML =
    '<div class="text-red-600 text-center text-xl mt-20">Kh√¥ng t√¨m th·∫•y l·ªõp h·ªçc!</div>';
  throw "Class not found";
}
const topic = (cls.topics || []).find((t) => t.topic_id === topicId);
if (!topic) {
  document.body.innerHTML =
    '<div class="text-red-600 text-center text-xl mt-20">Kh√¥ng t√¨m th·∫•y ch·ªß ƒë·ªÅ!</div>';
  throw "Topic not found";
}

// Hi·ªÉn th·ªã header v√† prompt
document.getElementById("topicInfo").innerHTML = `
  <a href="javascript:history.back()" class="text-blue-600 text-sm">&larr; Back to class list</a>
  <h1 class="text-3xl font-bold mt-2 mb-2">${topic.title}</h1>
  <div class="flex items-center gap-2 text-sm text-gray-600">
    <span class="bg-gray-200 px-2 py-0.5 rounded-full text-xs font-semibold">${topic.role || "Teacher"
  }</span>
    <span>${topic.created_by}</span>
    <span>&bull;</span>
    <span>${topic.created_at}</span>
  </div>
`;
document.getElementById("promptBlock").innerHTML = `
  <p class="text-gray-800 mb-4">${topic.description}</p>
  <div class="flex items-center gap-6 text-sm text-gray-500">
    <div>‚ù§Ô∏è ${topic.likes || 0}</div>
    <div>üí¨ ${topic.replies || (topic.answers || []).length} replies</div>
  </div>
`;

// H√†m render c√¢u tr·∫£ l·ªùi
function renderAnswers() {
  const box = document.getElementById("answersList");
  if (!topic.answers || !topic.answers.length) {
    box.innerHTML = `<div class="text-gray-500">Ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi n√†o.</div>`;
    return;
  }

  box.innerHTML = topic.answers
    .map(
      (a, index) => `
    <div onclick="openAnswerDetail(${index})"
         class="bg-white p-4 rounded-xl shadow hover:shadow-xl transition border cursor-pointer transform hover:scale-[1.02]">
      <div class="flex items-center gap-3 mb-3">
        <img src="${a.picture
        }" alt="avatar" class="w-9 h-9 rounded-full object-cover"/>
        <div>
          <div class="font-semibold">${a.created_by}</div>
          <div class="text-xs text-gray-500">${a.created_at}</div>
        </div>
      </div>
      <div class="text-sm text-gray-700 max-h-32 overflow-y-auto whitespace-pre-line">
        ${a.content}
      </div>
      <div class="mt-3 text-sm text-gray-500">‚ù§Ô∏è ${a.likes || 0}</div>
    </div>
  `
    )
    .join("");
}
renderAnswers();

// =================    C√¢u tr·∫£ l·ªùi chi ti·∫øt ================
// xem chi ti·∫øt c√¢u tr·∫£ l·ªùi
function openAnswerDetail(index) {
  currentAnswerIndex = index;
  const ans = topic.answers[index];
  document.getElementById("answerModal").classList.remove("hidden");
  document.getElementById("answerAvatar").src = ans.picture || "https://via.placeholder.com/40";
  document.getElementById("answerAuthor").innerText =
    ans.created_by || "L·ªói hi·ªÉn th·ªã";
  document.getElementById("answerText").innerText = ans.content;
  document.getElementById("likeCount").innerText = `‚ù§Ô∏è ${ans.likes || 0}`;
  document.getElementById("replyCount").innerText = `${ans.replies?.length || 0
    } replies`;

  renderReplies();
}

// ƒë√≥ng chi ti·∫øt c√¢u tr·∫£ l·ªùi
function closeAnswerDetail() {
  document.getElementById("answerModal").classList.add("hidden");
  currentAnswerIndex = null;
}

function sendReply() {
  const input = document.getElementById("replyInput");
  const replyText = input.value.trim();
  if (!replyText) return alert("Nh·∫≠p ph·∫£n h·ªìi tr∆∞·ªõc khi g·ª≠i!");

  const answer = topic.answers[currentAnswerIndex];
  answer.replies = answer.replies || [];

  answer.replies.push({
    by: googleUser.name || "B·∫°n",
    text: replyText,
    at: new Date().toLocaleString(),
    picture: googleUser.picture || "https://via.placeholder.com/40", // <== th√™m d√≤ng n√†y
  });

  // L∆∞u l·∫°i
  localStorage.setItem("classes", JSON.stringify(classes));

  input.value = "";
  renderReplies();
}
function renderReplies() {
  const list = document.getElementById("replyList");
  const answer = topic.answers[currentAnswerIndex];
  const replies = answer.replies || [];

  if (!replies.length) {
    list.innerHTML = `<div class="text-gray-400 italic">Ch∆∞a c√≥ ph·∫£n h·ªìi n√†o.</div>`;
    return;
  }

  list.innerHTML = replies
    .map(
      (r) => `
  <div class="flex items-start gap-3">
<img src="${r.picture || "https://via.placeholder.com/40"}" alt="avatar"
     class="w-9 h-9 rounded-full object-cover shrink-0" />
    <div class="flex-1 bg-gray-100 rounded-lg px-4 py-3">
      <div class="flex justify-between items-center mb-1">
        <div class="font-medium text-sm text-gray-900">${r.by}</div>
        <div class="text-xs text-gray-500">${r.at}</div>
      </div>
      <div class="text-sm text-gray-800">${r.text}</div>
      <div class="mt-2 text-sm text-gray-500">‚ô° 0</div>
    </div>
  </div>
`
    )
    .join("");
}

// S·ª± ki·ªán g·ª≠i tr·∫£ l·ªùi
document.getElementById("submitAnswer").onclick = sendAnswer;

// Khi ng∆∞·ªùi d√πng g·ª≠i tr·∫£ l·ªùi
function sendAnswer() {
  const ta = document.getElementById("answerContent");
  const content = ta.value.trim();
  if (!content) return alert("Nh·∫≠p n·ªôi dung tr·∫£ l·ªùi");

  // Build object answer m·ªõi
  const newAnswer = {
    answer_id: "A" + ((topic.answers || []).length + 1),
    content,
    created_by: googleUser.name || "B·∫°n",
    created_at: new Date().toLocaleString(),
    likes: 0,
    picture: googleUser.picture || "https://via.placeholder.com/40",
  };

  // Th√™m v√†o ƒë·∫ßu m·∫£ng v√† l∆∞u l·∫°i
  topic.answers = topic.answers || [];
  topic.answers.unshift(newAnswer);
  localStorage.setItem("classes", JSON.stringify(classes));

  // Reset textarea v√† re-render
  ta.value = "";
  ta.style.height = "auto";
  renderAnswers();
}

// T·ª± ƒë·ªông gi√£n textarea tr·∫£ l·ªùi
const answerContent = document.getElementById("answerContent");
answerContent.addEventListener("input", function () {
  this.style.height = "auto";
  this.style.height = this.scrollHeight + "px";
});
answerContent.addEventListener("keydown", function (e) {
  // Shift+Enter xu·ªëng d√≤ng, Enter g·ª≠i
  if (e.key === "Enter" && !e.shiftKey) {
    sendAnswer();
    e.preventDefault();
  }
});

// =============== AI Chatbot Popup ================
document.getElementById("openChat").onclick = () => toggleChat(true);
document.getElementById("closeChat").onclick = () => toggleChat(false);
document.getElementById("sendBtn").onclick = () => sendMessage();

function toggleChat(show) {
  document.getElementById("chatPopup").classList.toggle("hidden", !show);
  if (show) setTimeout(() => document.getElementById("userInput").focus(), 100);
}

async function sendMessage() {
  const input = document.getElementById("userInput");
  const messages = document.getElementById("messages");
  if (!input.value.trim()) return;

  messages.innerHTML += `
  <div class="mb-1 flex justify-end">
    <div class="bg-blue-500 text-white px-4 py-2 rounded-lg max-w-xs break-words">
      ${escapeHtml(input.value)}
    </div>
  </div>`;

  messages.innerHTML += `<div id="loading" class="mb-2"><span class="bg-gray-700 rounded-lg px-3 py-2 inline-block text-gray-300">AI ƒëang tr·∫£ l·ªùi...</span></div>`;
  messages.scrollTop = messages.scrollHeight;

  try {
    const aiReply = await callOpenAIAPI(input.value);
    document.getElementById("loading").remove();
    lastAIReply = aiReply; // <-- TH√äM D√íNG N√ÄY
    messages.innerHTML += `
        <div class="mb-2 text-left">
        <span class="bg-gray-800 rounded-lg px-3 py-2 inline-block text-white break-words max-w-[80%] whitespace-pre-line">
        ${marked.parse(aiReply)}
        </span>
        </div>`;
    messages.scrollTop = messages.scrollHeight;
  } catch (err) {
    document.getElementById("loading").remove();
    messages.innerHTML += `<div class="mb-2 text-left"><span class="bg-red-700 rounded-lg px-3 py-2 inline-block text-white">L·ªói: ${escapeHtml(
      err.message
    )}</span></div>`;
    messages.scrollTop = messages.scrollHeight;
  }

  input.value = "";
  input.style.height = "auto";
}

function escapeHtml(str) {
  return str.replace(/[&<>"']/g, function (m) {
    return {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;",
    }[m];
  });
}

// T·ª± ƒë·ªông gi√£n textarea chat AI
const userInput = document.getElementById("userInput");
userInput.addEventListener("input", function () {
  this.style.height = "auto";
  this.style.height = this.scrollHeight + "px";
});
userInput.addEventListener("keydown", function (e) {
  // Shift+Enter xu·ªëng d√≤ng, Enter g·ª≠i
  if (e.key === "Enter" && !e.shiftKey) {
    sendMessage();
    e.preventDefault();
  }
});
const textarea = document.getElementById("answerContent");
const answerBar = document.getElementById("answerBar");

textarea.addEventListener("focus", () => {
  answerBar.classList.add("fullscreen-answer");
});

textarea.addEventListener("blur", () => {
  // Delay ƒë·ªÉ tr√°nh m·∫•t khi click n√∫t G·ª≠i
  setTimeout(() => {
    answerBar.classList.remove("fullscreen-answer");
  }, 200);
});

// L·∫Øng nghe s·ª± ki·ªán khi ng∆∞·ªùi d√πng nh·∫•n n√∫t "X√≥a l·ªãch s·ª≠ chat"
document.getElementById("clearChatHistory").addEventListener("click", function () {
  // X√≥a l·ªãch s·ª≠ chat kh·ªèi localStorage
  localStorage.removeItem('conversationHistory');

  // Th√¥ng b√°o cho ng∆∞·ªùi d√πng r·∫±ng l·ªãch s·ª≠ ƒë√£ ƒë∆∞·ª£c x√≥a
  alert("L·ªãch s·ª≠ chat ƒë√£ ƒë∆∞·ª£c x√≥a.");
});

// ======= NgƒÉn copy/paste to√†n trang, ch·ªâ cho d√°n t·ª´ AI =======
document.addEventListener('paste', e => {
  if (!e.target.closest('#chatPopup') && e.target.id !== "answerContent") {
    e.preventDefault();
  }
});
// ƒê√°nh d·∫•u copy t·ª´ AI b·∫±ng custom MIME
document.getElementById("messages").addEventListener('copy', function (e) {
  let selection = window.getSelection();
  let text = selection ? selection.toString() : "";
  if (text) {
    e.preventDefault();
    e.clipboardData.setData('text/plain', text);
    e.clipboardData.setData('text/x-criticore-ai', 'yes');
  }
});

// H√†m ki·ªÉm tra khi ng∆∞·ªùi d√πng d√°n n·ªôi dung v√†o
document.getElementById("answerContent").addEventListener('paste', function (e) {
  let clipboard = e.clipboardData || window.clipboardData;
  if (!clipboard) return;
  let pasted = clipboard.getData('text/plain');
  let isAI = clipboard.getData('text/x-criticore-ai') === 'yes';

  // N·∫øu kh√¥ng ph·∫£i l√† n·ªôi dung t·ª´ AI
  if (!isAI) {
    e.preventDefault();
    showToast("Ch·ªâ ƒë∆∞·ª£c d√°n n·ªôi dung ƒë√£ copy t·ª´ AI chatbot!", 3000); // Th√¥ng b√°o l·ªói
    return;
  }

  // N·∫øu l√† n·ªôi dung t·ª´ AI, ki·ªÉm tra ƒë·ªô t∆∞∆°ng ƒë·ªìng
  let pastedNorm = normalizeText(pasted);  // Chu·∫©n h√≥a vƒÉn b·∫£n d√°n
  let aiNorm = normalizeText(lastAIReply);  // Chu·∫©n h√≥a vƒÉn b·∫£n AI
  let sim = diceCoefficient(pastedNorm, aiNorm);  // T√≠nh ƒë·ªô t∆∞∆°ng ƒë·ªìng

  // N·∫øu ƒë·ªô t∆∞∆°ng ƒë·ªìng l·ªõn h∆°n 80%, c·∫£nh b√°o
  if (sim > 0.8) {
    setTimeout(() => {
      showToast("‚ö†Ô∏è C√¢u tr·∫£ l·ªùi c·ªßa b·∫°n qu√° gi·ªëng g·ª£i √Ω AI (" + Math.round(sim * 100) + "%)! H√£y t·ª± di·ªÖn ƒë·∫°t l·∫°i.", 4000);
    }, 100);
  }
});

// Khi ng∆∞·ªùi d√πng s·ª≠a n·ªôi dung trong textarea, ki·ªÉm tra gi·ªëng AI
document.getElementById("answerContent").addEventListener('input', function (e) {
  let inputContent = e.target.value.trim();

  // Ki·ªÉm tra n·∫øu n·ªôi dung gi·ªëng g·ª£i √Ω AI
  let normalizedInput = normalizeText(inputContent); // Chu·∫©n h√≥a n·ªôi dung
  let normalizedAI = normalizeText(lastAIReply); // Chu·∫©n h√≥a n·ªôi dung AI
  let sim = diceCoefficient(normalizedInput, normalizedAI); // T√≠nh ƒë·ªô t∆∞∆°ng ƒë·ªìng

  // N·∫øu ƒë·ªô t∆∞∆°ng ƒë·ªìng l·ªõn h∆°n 80%, c·∫£nh b√°o v√† kh√¥ng cho g·ª≠i
  if (sim > 0.8) {
    showToast("‚ö†Ô∏è C√¢u tr·∫£ l·ªùi c·ªßa b·∫°n qu√° gi·ªëng g·ª£i √Ω AI (" + Math.round(sim * 100) + "%)! H√£y t·ª± di·ªÖn ƒë·∫°t l·∫°i.", 4000);
    document.getElementById("submitAnswer").disabled = true; // Kh√¥ng cho g·ª≠i c√¢u tr·∫£ l·ªùi
  } else {
    document.getElementById("submitAnswer").disabled = false; // Cho ph√©p g·ª≠i c√¢u tr·∫£ l·ªùi n·∫øu ƒë·ªô t∆∞∆°ng ƒë·ªìng nh·ªè h∆°n 80%
  }
});

// H√†m chu·∫©n h√≥a vƒÉn b·∫£n (x√≥a d·∫•u c√¢u, kho·∫£ng tr·∫Øng th·ª´a, chuy·ªÉn v·ªÅ ch·ªØ th∆∞·ªùng)
function normalizeText(str) {
  return str
    .toLowerCase()
    .replace(/[\.\,\!\?\:\;\-\_\"\‚Äú\‚Äù\'\(\)\[\]\{\}]/g, '') // Lo·∫°i b·ªè d·∫•u c√¢u
    .replace(/\s+/g, ' ') // Thu g·ªçn kho·∫£ng tr·∫Øng
    .trim();
}

// T√≠nh ƒë·ªô t∆∞∆°ng ƒë·ªìng gi·ªØa hai chu·ªói (S·ª≠ d·ª•ng thu·∫≠t to√°n Sorensen-Dice Coefficient)
function diceCoefficient(a, b) {
  // T√°ch th√†nh c√°c bigrams (c·∫∑p k√Ω t·ª± li√™n ti·∫øp)
  function bigrams(str) {
    let s = ' ' + str + ' ';
    let arr = [];
    for (let i = 0; i < s.length - 1; i++) {
      arr.push(s.slice(i, i + 2));
    }
    return arr;
  }
  let bgA = bigrams(a), bgB = bigrams(b);
  let matches = 0;
  let bgs = bgB.slice();
  for (let i = 0; i < bgA.length; i++) {
    let idx = bgs.indexOf(bgA[i]);
    if (idx !== -1) {
      matches++;
      bgs.splice(idx, 1);
    }
  }
  return (2 * matches) / (bgA.length + bgB.length);
}

// H√†m showToast ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o
function showToast(message, time = 3500) {
  const toast = document.getElementById("toast");
  toast.innerText = message;
  toast.classList.remove("hidden");
  toast.classList.add("opacity-100");
  setTimeout(() => {
    toast.classList.add("hidden");
    toast.classList.remove("opacity-100");
  }, time);
}